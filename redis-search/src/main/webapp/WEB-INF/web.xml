<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>redis-search</display-name>

	<description>Spring Data Redis-based Twitter-clone sample application</description>
	<!-- <context-param> <param-name>webAppRootKey</param-name> <param-value>retwisj.root</param-value>
		</context-param> -->
	<!-- <context-param> <param-name>log4jConfigLocation</param-name> <param-value>/WEB-INF/classes/log4j.properties</param-value>
		</context-param> -->
	<!-- - Location of the XML file that defines the root application context.
		- Applied by ContextLoaderServlet. -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/applicationContext.xml</param-value>
	</context-param>


	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>





	<!-- - Configures Log4J for this web app. - As this context specifies a
		context-param "log4jConfigLocation", its file path - is used to load the
		Log4J configuration, including periodic refresh checks. - - Would fall back
		to default Log4J initialization (non-refreshing) if no special - context-params
		are given. - - Exports a "web app root key", i.e. a system property that
		specifies the root - directory of this web app, for usage in log file paths.
		- This web app specifies "petclinic.root" (see log4j.properties file). -->
	<!-- Leave the listener commented-out if using JBoss -->
	<!-- <listener> <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
		</listener> -->
	<!-- <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		</listener> -->
	<!-- Defines the 'default' servlet (usually for service static resources).
		Uncomment this in containers (GlassFish) that do not declare this implicit
		definition out of the box, or change the name of the servlet mapping below
		to the appropriate one. <servlet> <servlet-name>default</servlet-name> <servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
		<init-param> <param-name>debug</param-name> <param-value>0</param-value>
		</init-param> <init-param> <param-name>listings</param-name> <param-value>false</param-value>
		</init-param> <load-on-startup>1</load-on-startup> </servlet> -->
	<!-- - Map static resources to the default servlet - examples: - http://localhost:8080/static/images/retwis.png
		- http://localhost:8080/static/styles/retwis.css -->
	<!-- <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/static/*</url-pattern>
		</servlet-mapping> -->

	<!-- - Servlet that dispatches request to registered handlers (Controller
		implementations). - Has its own application context, by default defined in
		"{servlet-name}-servlet.xml", - i.e. "retwis-servlet.xml". - - A web app
		can contain any number of such servlets. - Note that this web app has a shared
		root application context, serving as parent - of all DispatcherServlet contexts. -->
	<servlet>
		<servlet-name>redis-search</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--<servlet-class>org.springframework.data.redis.samples.retwisj.web.MyDispatcherServlet</servlet-class> -->
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>redis-search</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<servlet-name>redis-search</servlet-name>
	</filter-mapping>

	<session-config>
		<session-timeout>300</session-timeout>
	</session-config>

	<!-- eliminate welcome files -->
	<!-- useful for Servlet 3 container (Tomcat 7 and Jetty 6) -->
	<welcome-file-list>
		<welcome-file></welcome-file>
	</welcome-file-list>
	<!-- <jsp-config> <jsp-property-group> <description>Basic header/footer
		templating</description> <url-pattern>*.jsp</url-pattern> <el-ignored>false</el-ignored>
		<page-encoding>UTF-8</page-encoding> <include-prelude>/WEB-INF/templates/header.jspf</include-prelude>
		<include-coda>/WEB-INF/templates/footer.jspf</include-coda> </jsp-property-group>
		</jsp-config> -->

	<!-- <error-page> <error-code>500</error-code> <location>/error</location>
		</error-page> -->
	<!-- <error-page> <error-code>404</error-code> <location>/error</location>
		</error-page> <error-page> <error-code>405</error-code> <location>/error</location>
		</error-page> <error-page> <error-code>400</error-code> <location>/error</location>
		</error-page> -->

	<!--session复制配置 -->
	<distributable/>
</web-app>