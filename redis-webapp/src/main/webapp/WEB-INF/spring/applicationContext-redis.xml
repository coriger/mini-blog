<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"

	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
      http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">



	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/configuration.properties" />

	<util:properties id="globalProperties" location="/WEB-INF/configuration.properties" />

	<!--springmvc 静态资源配置 -->
	<mvc:resources mapping="/static/js/**" location="/js/" />
	<mvc:resources mapping="/static/styles/**" location="/styles/" />
	<mvc:resources mapping="/static/images/**" location="/images/" />

	<mvc:resources mapping="/blog/upload/**" location="/blog/upload/" />
	<mvc:resources mapping="/blog/sina/upload/**" location="/blog/sina/upload/" />
	<mvc:resources mapping="/blog/searchhome" location="/search/blogsearch" />
	<mvc:resources mapping="/user/upload/**" location="/user/upload/" />



	<!-- 将指定路径的请求直接转到对应的view上，而不需要特定的controller来处理请求 -->
	<mvc:view-controller path="/postform" view-name="/fragments/postform" />
	<mvc:view-controller path="/pagelayer" view-name="/fragments/pagelayer" />
	<mvc:view-controller path="/videolayer" view-name="/fragments/videolayer" />
	<mvc:view-controller path="/imagelayer" view-name="/fragments/imagelayer" />
	<mvc:view-controller path="/blog/sina/imagelayer"
		view-name="/blog/sina/imagelayer" />
	<mvc:view-controller path="/blog/sina/postform"
		view-name="/blog/sina/postform" />
	<mvc:view-controller path="/error" view-name="error" />
	<mvc:view-controller path="/user/searchhome"
		view-name="/search/usersearch" />
	<mvc:view-controller path="/blog/searchhome"
		view-name="/search/blogssearch" />
	<mvc:view-controller path="/manage/group/addForm"
		view-name="/manage/group/addForm" />


	<!-- - Message source for this context, loaded from localized "messages_xx"
		files. - Could also reside in the root application context, as it is generic,
		- but is currently just used within Retwis's web tier. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
				<value>validator</value>
				<value>redis</value>
			</list>
		</property>
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />



	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:use-pool="true" p:port="6379" p:hostName="localhost" />

	<!--String-focused convenience classes -->
	<bean id="template" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

	<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory"/> -->

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	</bean>

	<!-- this is the Message Driven POJO (MDP) 发布订阅消息配置 -->
	<!-- <bean id="messageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<constructor-arg> <bean class="com.xiaozhi.blog.redis.message.DefaultMessageDelegate"
		/> </constructor-arg> </bean> -->
	<!-- and this is the message listener container... -->
	<!-- <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="jedisConnectionFactory" /> <property
		name="messageListeners"> <map> <entry key-ref="messageListener"> <bean class="org.springframework.data.redis.listener.ChannelTopic">
		<constructor-arg value="chatroom"/> </bean> </entry> </map> </property> </bean> -->
	<!-- <bean class="org.springframework.data.redis.samples.retwisj.exception.QADHandlerExceptionResolver">
		</bean> -->
	<!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> -->
	<!--<bean id="exceptionResolver" class="org.springframework.data.redis.samples.retwisj.exception.CustomMappingExceptionResolver"> -->
	<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
	<!--<property name="defaultErrorView" value="redirect:http://tianji.com"></property> -->
	<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
	<!--<property name="exceptionAttribute" value="ex"></property> -->
	<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常页名作为值 -->
	<!-- <property name="exceptionMappings"> <props> <prop key="org.springframework.web.servlet.PageNotFound">redirect:http://tianji.com</prop>
		<prop key="IOException">error/ioexp</prop> <prop key="java.sql.SQLException">error/sqlexp</prop>
		</props> </property> -->
	<!-- </bean> -->


	<!-- sorl客户端配置 -->
	<bean id="userSearchServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg>
			<value>${solr.server.index.user}</value>
		</constructor-arg>
	</bean>
	<bean id="blogSearchServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg>
			<value>${solr.server.index.blog}</value>
		</constructor-arg>
	</bean>

	<!-- sorl客户端配置 -->
	<bean id="userIndexServer"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0">
			<value>${solr.server.index.user}</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>1024</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>100</value>
		</constructor-arg>
	</bean>
	<bean id="blogIndexServer"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0">
			<value>${solr.server.index.blog}</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>1024</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>100</value>
		</constructor-arg>
	</bean>



	<!-- simple-spring-memcached配置信息 -->
	<!--<bean name="defaultMemcachedClient" class="com.google.code.ssm.CacheFactory">
		<property name="cacheClientFactory"> <bean class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl"
		/> </property> <property name="addressProvider"> <bean class="com.google.code.ssm.config.DefaultAddressProvider">
		<property name="address" value="localhost:12000" /> </bean> </property> <property
		name="configuration"> <bean class="com.google.code.ssm.providers.CacheConfiguration">
		<property name="consistentHashing" value="true" /> </bean> </property> </bean> -->
	<!--<import resource="classpath:simplesm-context.xml" /> -->
	<!-- simple-spring-memcached配置信息结束 -->


	<!--<import resource="cas-security.xml"/> -->
	<import resource="security.xml" />
	<import resource="mongodb.xml" />
	<import resource="rabbitMQ.xml" />
	<import resource="dubbo.xml" />


	<bean id="timeline" class="weibo4j.Timeline" />
	<bean id="comments" class="weibo4j.Comments" />
	<bean id="users" class="weibo4j.Users" />
	<bean id="friendships" class="weibo4j.Friendships" />
	<bean id="favorite" class="weibo4j.Favorite" />




</beans>