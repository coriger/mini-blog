<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/**"
				filters="securityContextPersistenceFilter,
				singleLogoutFilter,
				logoutFilter,
				gatewayProcessingFilter,
				casAuthenticationFilter,
				exceptionTranslationFilter,
				gatewayExceptionTranslationFilter,
				filterSecurityInterceptor" />
		</sec:filter-chain-map>
	</bean>


	<bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />


	 <!-- 注销客户端 -->
     <bean id="singleLogoutFilter"  class="org.jasig.cas.client.session.SingleSignOutFilter" />

    <!-- 注销服务器端 -->
	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg index="0"
			value="http://${casHost}:8080/cas/logout" />
		<constructor-arg index="1">
			<list>
				<bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

   	<bean id="gatewayProcessingFilter" class="com.tianji.test.core.redis.GatewayProcessingFilter">
		<property name="filterProcessesUrl" value="/j_spring_cas_security_check" />
	</bean>


	<bean id="casAuthenticationFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter"
		p:authenticationManager-ref="authenticationManager"
		p:filterProcessesUrl="/j_spring_cas_security_check" />

	<bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean
				class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
				<property name="loginUrl" value="http://${casHost}:8080/cas/login" />
				<property name="serviceProperties" ref="serviceProperties" />
				<property name="encodeServiceUrlWithSessionId" value="true" />

			</bean>
		</property>
	</bean>

	<bean id="gatewayExceptionTranslationFilter"
		class="com.tianji.test.core.redis.GatewayExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean class="com.tianji.test.core.redis.GatewayEntryPoint">
				<property name="loginUrl" value="http://${casHost}:8080/cas/login" />
				<property name="serviceProperties" ref="serviceProperties" />
			</bean>
		</property>
	</bean>

	<!--  <bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">-->
	<bean id="filterSecurityInterceptor" class="com.tianji.test.core.redis.CustomFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager">
			<bean class="org.springframework.security.access.vote.AffirmativeBased">
				<property name="allowIfAllAbstainDecisions" value="false" />
				<property name="decisionVoters">
					<list>
						<bean class="org.springframework.security.access.vote.RoleVoter" />
					</list>
				</property>
			</bean>
		</property>

		<property name="securityMetadataSource">
			<sec:filter-invocation-definition-source>
				<sec:intercept-url pattern="/main" access="ROLE_USER" />
				<sec:intercept-url pattern="/u/**" access="ROLE_USER" />
				<sec:intercept-url pattern="/manage/**" access="ROLE_USER" />
				<sec:intercept-url pattern="/blog/**" access="ROLE_USER" />
				<sec:intercept-url pattern="/comment/**" access="ROLE_USER" />
				<sec:intercept-url pattern="/timeline/**" access="ROLE_gateway" />

			</sec:filter-invocation-definition-source>
		</property>
	</bean>


	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="casAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider"
		p:serviceProperties-ref="serviceProperties" p:userDetailsService-ref="customUserDetailsService"
		p:ticketValidator-ref="casTicketValidator" p:key="my_password_for_this" />

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="http://${localHost}/j_spring_cas_security_check" />
		<property name="sendRenew" value="false" />
	</bean>


	<bean id="customUserDetailsService" class="com.tianji.test.core.redis.UserDetailsServiceImpl"
		p:userInfoService-ref="userInfoService" />
	<bean id="userInfoService" class="com.tianji.test.core.redis.UserInfoService"
		p:template-ref="template" />


	<bean id="casTicketValidator"
		class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
		<constructor-arg index="0" value="http://${casHost}:8080/cas" />
	</bean>


</beans>
