<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"

  xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
      http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

  <aop:aspectj-autoproxy />
  <context:annotation-config />
  
  <context:component-scan base-package="com.clo" />



    <util:properties id="globalProperties" location="/WEB-INF/configuration.properties" />
    <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
    p:location="/WEB-INF/configuration.properties" />

    <!-- 用此连接池会莫名其妙的出现一大堆未关闭数据库连接问题原因：
    maxConnectionsPerPartition*partitionCount=连接数，要小心参数配置-->

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="idleConnectionTestPeriod" value="60"/>
		<property name="idleMaxAge" value="240"/>
		<property name="maxConnectionsPerPartition" value="5"/>
		<property name="minConnectionsPerPartition" value="10"/>
		<property name="partitionCount" value="3"/>
		<property name="acquireIncrement" value="1"/>
		<property name="statementsCacheSize" value="100"/>
		<property name="releaseHelperThreads" value="3"/>
	</bean>

<!--
	    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/test"/>

		<property name="username" value="root"/>
		<property name="password" value="root"/>
		<property name="maxActive" value="50"/>

		<property name="maxIdle" value="30"/>
		<property name="maxWait" value="1000"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="60"/>
	</bean>
 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/sqlmap.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	
	
<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->

<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
</bean>

<!-- 配置事务的传播特性 -->

<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
    <property name="transactionManager" ref="transactionManager" />
    <property name="transactionAttributes">
        <props>
            <prop key="add*">PROPAGATION_REQUIRED</prop>
            <prop key="edit*">PROPAGATION_REQUIRED</prop>
            <prop key="remove*">PROPAGATION_REQUIRED</prop>
            <prop key="insert*">PROPAGATION_REQUIRED</prop>
            <prop key="update*">PROPAGATION_REQUIRED</prop>
            <prop key="del*">PROPAGATION_REQUIRED</prop>
            <prop key="*">readOnly</prop>
        </props>
    </property>
</bean>
    
<!-- 为AccountBiz接口配置事务拦截器，baseTransactionProxy是事务拦截器，在Controller中获取这个对象 -->
<bean id="userService" parent="baseTransactionProxy">
    <!-- 设置target，也就是userService的实现类 -->
    <property name="target">
      <bean  class="com.clo.keno.service.impl.UserServiceImpl"/>
    </property>
</bean>
	
	
	
	
	
	
	

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:use-pool="true" p:port="6379" p:hostName="localhost" p:database="1" />
	<!--String-focused convenience classes -->
	<bean id="template" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

  <!-- simple-spring-memcached配置信息 -->
  <!--<bean name="defaultMemcachedClient" class="com.google.code.ssm.CacheFactory">
		<property name="cacheClientFactory">
			<bean class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl" />
		</property>
		<property name="addressProvider">
			<bean class="com.google.code.ssm.config.DefaultAddressProvider">
				<property name="address" value="localhost:12000" />
			</bean>
		</property>
		<property name="configuration">
			<bean class="com.google.code.ssm.providers.CacheConfiguration">
				<property name="consistentHashing" value="true" />
			</bean>
		</property>
  </bean>-->
  <!--<import resource="classpath:simplesm-context.xml" />-->
  <!-- simple-spring-memcached配置信息结束 -->

  <bean id="SpringContextUtil" class="com.clo.web.utils.SpringContextUtil"/>

  <bean id="userRoleHelper" class="com.tianji.test.core.redis.LoginHelper" />

  <!--<import resource="quartz.xml"/>-->
  <!--<import resource="rabbitMQ.xml"/>-->
  <import resource="security.xml"/>

</beans>